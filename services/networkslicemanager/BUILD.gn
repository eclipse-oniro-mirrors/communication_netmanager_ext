# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/communication/netmanager_ext/netmanager_ext_config.gni")

ohos_shared_library("networkslice_manager") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"
  sources = [
    "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/inet_addr.cpp",
    "src/allowednssaiconfig.cpp",
    "src/broadcast_proxy.cpp",
    "src/dns_result_callback.cpp",
    "src/hwnetworkslicemanager.cpp",
    "src/net_conn_callback.cpp",
    "src/networkslice_kernel_proxy.cpp",
    "src/networkslice_loop_manager.cpp",
    "src/networkslice_service.cpp",
    "src/networkslice_service_base.cpp",
    "src/networkslice_stub.cpp",
    "src/networkslicemanager.cpp",
    "src/networkslicemsgcenter.cpp",
    "src/networksliceutil.cpp",
    "src/nrunsolicitedmsgparser.cpp",
    "src/state_utils.cpp",
    "src/urspconfig.cpp",
  ]
  include_dirs = [
    "include",
    "model",
  ]

  external_deps = [
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "cellular_data:tel_cellular_data_api",
    "core_service:tel_core_service_api",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "libxml2:libxml2",
    "netmanager_base:net_conn_manager_if",
    "netmanager_base:net_manager_common",
    "netmanager_base:netsys_controller",
    "openssl:libcrypto_shared",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  cflags = [
    "-fstack-protector-strong",
    "-D_FORTIFY_SOURCE=2",
    "-O2",
  ]

  cflags_cc = [
    "-fstack-protector-strong",
    "-fexceptions",
    "-D_FORTIFY_SOURCE=2",
    "-O2",
  ]

  deps = [
    "$NETMANAGER_EXT_ROOT/interfaces/innerkits/netvpnclient:net_vpn_manager_if",
    "$NETMANAGER_EXT_ROOT/interfaces/innerkits/networksliceclient:networkslice_manager_if",
    "$NETMANAGER_EXT_ROOT/utils:net_event_report",
    "$NETMANAGER_EXT_ROOT/utils:net_manager_ext_common",
  ]

  defines = [
    "NETMGR_LOG_TAG = \"NetworksliceManager\"",
    "LOG_DOMAIN = 0xD0015B0",
  ]

  if (enable_netmgr_ext_debug) {
    defines += [ "NETMGR_DEBUG" ]
  }

  part_name = "netmanager_ext"
  subsystem_name = "communication"
}
